// <auto-generated />
using FurnitureFactory.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurnitureFactory.DAL.Migrations
{
    [DbContext(typeof(FurnitureFactoryDbContext))]
    [Migration("20250731155452_frist")]
    partial class frist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FurnitureFactory.DAL.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Components", (string)null);
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Subcomponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("CustomNotes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.ToTable("Subcomponents", (string)null);
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Component", b =>
                {
                    b.HasOne("FurnitureFactory.DAL.Product", "Product")
                        .WithMany("Components")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Subcomponent", b =>
                {
                    b.HasOne("FurnitureFactory.DAL.Component", "Component")
                        .WithMany("Subcomponents")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FurnitureFactory.DAL.CuttingSize", "CuttingSize", b1 =>
                        {
                            b1.Property<int>("SubcomponentId")
                                .HasColumnType("int");

                            b1.Property<double>("Length")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("CuttingLength");

                            b1.Property<double>("Thickness")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("CuttingThickness");

                            b1.Property<double>("Width")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("CuttingWidth");

                            b1.HasKey("SubcomponentId");

                            b1.ToTable("Subcomponents");

                            b1.WithOwner()
                                .HasForeignKey("SubcomponentId");
                        });

                    b.OwnsOne("FurnitureFactory.DAL.DetailSize", "DetailSize", b1 =>
                        {
                            b1.Property<int>("SubcomponentId")
                                .HasColumnType("int");

                            b1.Property<double>("Length")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("DetailLength");

                            b1.Property<double>("Thickness")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("DetailThickness");

                            b1.Property<double>("Width")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("DetailWidth");

                            b1.HasKey("SubcomponentId");

                            b1.ToTable("Subcomponents");

                            b1.WithOwner()
                                .HasForeignKey("SubcomponentId");
                        });

                    b.OwnsOne("FurnitureFactory.DAL.FinalSize", "FinalSize", b1 =>
                        {
                            b1.Property<int>("SubcomponentId")
                                .HasColumnType("int");

                            b1.Property<double>("Length")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("FinalLength");

                            b1.Property<double>("Thickness")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("FinalThickness");

                            b1.Property<double>("Width")
                                .HasPrecision(10, 2)
                                .HasColumnType("float(10)")
                                .HasColumnName("FinalWidth");

                            b1.HasKey("SubcomponentId");

                            b1.ToTable("Subcomponents");

                            b1.WithOwner()
                                .HasForeignKey("SubcomponentId");
                        });

                    b.OwnsOne("FurnitureFactory.DAL.VeneerLayer", "VeneerLayer", b1 =>
                        {
                            b1.Property<int>("SubcomponentId")
                                .HasColumnType("int");

                            b1.Property<string>("Inner")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("VeneerInner");

                            b1.Property<string>("Outer")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("VeneerOuter");

                            b1.HasKey("SubcomponentId");

                            b1.ToTable("Subcomponents");

                            b1.WithOwner()
                                .HasForeignKey("SubcomponentId");
                        });

                    b.Navigation("Component");

                    b.Navigation("CuttingSize")
                        .IsRequired();

                    b.Navigation("DetailSize")
                        .IsRequired();

                    b.Navigation("FinalSize")
                        .IsRequired();

                    b.Navigation("VeneerLayer")
                        .IsRequired();
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Component", b =>
                {
                    b.Navigation("Subcomponents");
                });

            modelBuilder.Entity("FurnitureFactory.DAL.Product", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
